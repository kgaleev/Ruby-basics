# frozen_string_literal: true

require_relative 'instance_counter'
require_relative 'manufacturer'
require_relative 'train'
require_relative 'station'
require_relative 'route'
require_relative 'wagon'
require_relative 'cargo_wagon'
require_relative 'passenger_wagon'
require_relative 'passenger_train'
require_relative 'cargo_train'

# q=Station.new('q')
# w=Station.new('w')
# d=CargoTrain.new("122ab")
# z=Route.new(q,w)
# d.set_route(z)
# p=CargoWagon.new(2)
# d.add_wagon(p)

# q.arrival(d)
# p=Wagon.new(:cargo, 15)
# p.assign_company('wheels')
# p.company
# Station.all
# d=CargoTrain.new(3)
# d=CargoTrain.new("122ab")
# f=CargoTrain.new("tyz-88")
# Train.find(3)
# Train.find("122ab")
# g=PassengerTrain.new("abc-22")
# z=Route.new(q,w)
# z=Route.new('q','w')
# x=Route.new(q,w)
# Station.instances
# Train.instances
# CargoTrain.instances
# PassengerTrain.instances
# Route.instances

# will not work because private
# a=Train.new(1,:cargo)
# s=Train.new(2,:passenger)

# Для пассажирских вагонов:
# Добавить атрибут общего кол-ва мест (задается при создании вагона)
# Добавить метод, который "занимает места" в вагоне (по одному за раз)
# Добавить метод, который возвращает кол-во занятых мест в вагоне
# Добавить метод, возвращающий кол-во свободных мест в вагоне.

# Для грузовых вагонов:
# Добавить атрибут общего объема (задается при создании вагона)
# Добавить метод, которые "занимает объем" в вагоне (объем указывается в качестве параметра метода)
# Добавить метод, который возвращает занятый объем
# Добавить метод, который возвращает оставшийся (доступный) объем

# У класса Station:
# написать метод, который принимает блок и проходит по всем поездам на станции, передавая каждый поезд в блок.

# У класса Train:
#  написать метод, который принимает блок и проходит по всем вагонам поезда (вагоны должны быть во внутреннем массиве), передавая каждый объект вагона в блок.

# Если нет интерфейса, то в отдельном файле, например, main.rb написать код, который:
# Создает тестовые данные (станции, поезда, вагоны) и связывает их между собой.
# Используя созданные в рамках задания методы, написать код, который перебирает последовательно все станции и для каждой станции выводит список поездов в формате:
#       - Номер поезда, тип, кол-во вагонов
#    А для каждого поезда на станции выводить список вагонов в формате:
#       - Номер вагона (можно назначать автоматически), тип вагона, кол-во свободных и занятых мест (для пассажирского вагона) или кол-во свободного и занятого объема (для грузовых вагонов).

# Если у вас есть интерфейс, то добавить возможности:
# При создании вагона указывать кол-во мест или общий объем, в зависимости от типа вагона
# Выводить список вагонов у поезда (в указанном выше формате), используя созданные методы
# Выводить список поездов на станции (в указанном выше формате), используя  созданные методы
# Занимать место или объем в вагоне
